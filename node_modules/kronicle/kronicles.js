var express = require('express');
var app = module.exports = express();
console.log('kronicles api!!!!');

app.get('/', function(req, res, next) {
	return KronicleModel.find(function(err, kronicles) {
		if (!err) {
			return res.send(kronicles);
		} else {
			return console.log(err);
		}
	});
});

app.get('/:id', function(req, res, next) {
	return KronicleModel.findById(req.params.id, function(err, kronicle) {
		if (!err) {
			return res.send(kronicle);
		} else {
			return res.send(err);
		}
	});
});

app.get('/:kId/step/:sId', function(req, res, next) {

	return KronicleModel.findById(req.params.kId, function(err, kronicle) {
		if (!err) {
			console.log(kronicle.steps);

			for (var i =0; i<kronicle.steps.length; i++) {
				console.log(kronicle.steps[i].id +"::"+ req.params.sId);
				if (kronicle.steps[i].id == req.params.sId) {
					return res.send(kronicle.steps[i]);
				}
			}
			return res.send(req.params.sId+" not found");

		} else {
			return res.send(err);
		}
	});

	// return StepModel.findById(req.params.id, function(err, step) {
	// 	if (!err) {
	// 		return res.send(step);
	// 	} else {
	// 		return res.send(err);
	// 	}
	// });
});

app.post('/', function(req, res, next) {
	var kronicle = new KronicleModel({
		title		: req.body.title,
		description : req.body.description,
		category	: req.body.category,
		imageUrl	: req.body.imageUrl,
		steps		: req.body.steps
	});

	kronicle.save(function(err, kronicle) {
		if (!err) { return console.log('kronicle created!'); }
		return console.log(err);
	});
	res.send(kronicle);

	//	Save for later, probly wont need!!!!!
	//	fs.writeFile('assets/kroncile/newImage.jpg', req.body.image, function(err){
	//		if (err) throw err;
	//		console.log('It is saved');
	//	});
});

app.put('/:id', function(req, res, next) {
	return KronicleModel.findById(req.params.id, function(err, kronicle) {
		if (!err) {
			var kronicle = new KronicleModel({
				title		: req.body.title,
				description	: req.body.description,
				category	: req.body.category,
				imageUrl	: req.body.imageUrl,
				steps		: req.body.steps
			});
			for (var s in req.body.steps) {
				var step = new StepModel({
					title			: req.body.title,
					description		: req.body.description,
					imageUrl		: req.body.imageUrl,
					parentKronicle	: req.body.parentKronicle,
					time			: req.body.time,
					indexInKronicle	: req.body.indexInKronicle
				});
			}
			return kronicle.save(function(err) {
				if (!err) {
					console.log('kronicle Updated!!');
					return res.send(kronicle);
				} else {
					console.log(err);
					return res.send(err);
				}
			});
		} else {
			return res.send(err);
		}
	});
});

app.put('/step/:id', function(req, res, next) {
	console.log(req.params.id);
	return StepModel.findbyId(req.params.id, function(err, step) {
		if (!err) {
			var step = new StepModel({
				title			: req.body.title,
				description		: req.body.description,
				imageUrl		: req.body.imageUrl,
				parentKronicle	: req.body.parentKronicle,
				time			: req.body.time,
				indexInKronicle : req.body.indexInKronicle
			});
			return step.save(function(err) {
				if (!err) {
					console.log('step Updated!!');
					return res.send(step);
				} else {
					console.log(err);
					return res.send(err);
				}
			});
		} else {
			return res.send(err);
		}
	});
});

app.delete('/:id', function(req, res, next){
	return KronicleModel.findById(req.params.id, function(err, kronicle) {
		if (!err) {
			return kronicle.remove(function(err) {
				if (!err) {
					console.log('kronicle Removed');
					return res.send('kronicle Removed');
				} else {
					return res.send(err);
				}
			});
		} else {
			return res.send(err);
		}
	});
});